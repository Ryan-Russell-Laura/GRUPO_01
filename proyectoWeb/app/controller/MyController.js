/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 4.3.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.7.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.7.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MyController', {
    extend: 'Ext.app.Controller',

    models: [
        'libro'
    ],
    stores: [
        'storeLibro'
    ],
    views: [
        'ingresolibro'
    ],

    refs: {
        mygridpanel: 'mygridpanel'
    },

    control: {
        "menu button[action='openAdmin']": {
            click: 'onOpenAdmin'
        },
        "menu button[action='openUser']": {
            click: 'onOpenUsuario'
        },
        "mygridpanel button[action='addLibro']": {
            click: 'onAgregarLibro'
        },
        "ingresolibro button[action='grabarlibro']": {
            click: 'onGrabarLibro'
        },
        "mygridpanel button[action='editLibro']": {
            click: 'onEditarLibro'
        },
        "mygridpanel button[action='eliminarLibro']": {
            click: 'onEliminarLibro'
        },
        "mygridpanel button[action='salir1']": {
            click: 'onSalir1'
        },
        "ingresolibro button[action='salir2']": {
            click: 'onSalir2'
        }
    },

    onOpenAdmin: function(window) {
        var win1 = Ext.widget('windowadmin');
    },

    onOpenUsuario: function(window) {
                 var win1 = Ext.widget('windowusuario');
    },

    onAgregarLibro: function(button, e, eOpts) {
        var win=Ext.widget('ingresolibro');
        mode='Agregar';
    },

    onGrabarLibro: function(button, e, eOpts) {
                var store = Ext.getStore('storeLibro');
                var win1 = button.up('ingresolibro');
                var form = win1.down('form').getForm();
                var values = form.getValues();

              if (mode === 'Actualizar') {

                var c_libro_id = Ext.getCmp('libro_id').getValue();
                var c_libro_nombre = Ext.getCmp('libro_nombre').getValue().trim().toUpperCase();
                var c_libro_autor = Ext.getCmp('libro_autor').getValue().trim().toUpperCase();
                var c_libro_editorial = Ext.getCmp('libro_editorial').getValue().trim().toUpperCase();
                var c_libro_fecha = Ext.getCmp('libro_fecha').getValue().trim().toUpperCase();
                var c_carrera_id = Ext.getCmp('carrera_id').getValue();
                var c_semestre_id = Ext.getCmp('semestre_id').getValue();
                var c_curso_id = Ext.getCmp('curso_id').getValue();

                var libro_id = Ext.encode(c_libro_id);
                var libro_nombre = Ext.encode(c_libro_nombre);
                var libro_autor = Ext.encode(c_libro_autor);
                var libro_editorial = Ext.encode(c_libro_editorial);
                var libro_fecha = Ext.encode(c_libro_fecha);
                var carrera_id = Ext.encode(c_carrera_id);
                var semestre_id = Ext.encode(c_semestre_id);
                var curso_id = Ext.encode(c_curso_id);

                Ext.Ajax.request({
                    method: 'POST',
                    url: 'src/GrabarEditarPersonal.php',
                    params: {
                        libro_id: libro_id,
                        libro_nombre: libro_nombre,
                        libro_autor: libro_autor,
                        libro_editorial: libro_editorial,
                        libro_fecha: libro_fecha,
                        carrera_id: carrera_id,
                        semestre_id: semestre_id,
                        curso_id: curso_id
                    },
                    failure: function () {
                        Ext.Msg.alert('Mensaje', 'Error en el servidor');
                    },
                    success: function (response) {
                        var resp = Ext.decode(response.responseText);
                        var vacio = resp.data[0];
                        var actua = resp.data[0];

                        if (vacio === "vacio") {
                            Ext.Msg.alert('Mensaje', 'Falta completar los campos... verifique');
                        } else if (actua === "actua") {
                            Ext.Msg.alert('Mensaje', 'Actualizaci√≥n exitosa...');
                            store.load({
                                params: {
                                    libro_nombre: c_libro_nombre
                                }
                            });
                            win1.close();
                        }
                    }
                });
            }

                if (mode == 'Agregar') {
                    var c_libro_nombre = Ext.getCmp('libro_nombre').getValue().trim().toUpperCase();
                    var c_libro_autor = Ext.getCmp('libro_autor').getValue().trim().toUpperCase();
                    var c_libro_editorial = Ext.getCmp('libro_editorial').getValue().trim().toUpperCase();
                    var c_libro_fecha = Ext.getCmp('libro_fecha').getValue().trim().toUpperCase();
                    var c_carrera_id = Ext.getCmp('carrera_id').getValue();
                    var c_semestre_id = Ext.getCmp('semestre_id').getValue();
                    var c_curso_id = Ext.getCmp('curso_id').getValue();

                    var libro_nombre = Ext.encode(c_libro_nombre);
                    var libro_autor = Ext.encode(c_libro_autor);
                    var libro_editorial = Ext.encode(c_libro_editorial);
                    var libro_fecha = Ext.encode(c_libro_fecha);
                    var carrera_id = Ext.encode(c_carrera_id);
                    var semestre_id = Ext.encode(c_semestre_id);
                    var curso_id = Ext.encode(c_curso_id);


                    Ext.Ajax.request({
                        method: 'POST',
                        url: 'src/GrabarNuevoPersonal.php',
                        params: {
                            libro_nombre: libro_nombre,
                            libro_autor: libro_autor ,
                            libro_editorial:libro_editorial,
                            libro_fecha: libro_fecha,
                            carrera_id:carrera_id,
                            semestre_id:semestre_id,
                            curso_id:curso_id
                        },
                        failure: function () {
                            Ext.Msg.alert('Mensaje', 'Error en el servidor al agregar nuevo personal.');
                        },
                        success: function (response) {
                            var resp = Ext.decode(response.responseText);
                            var vacio = resp.data[0];
                            var nuevo = resp.data[0];

                            if (vacio === "vacio") {
                                Ext.Msg.alert('Mensaje', 'Falta completar los campos... verifique');
                            } else if (nuevo === "nuevo") {
                                Ext.Msg.alert('Mensaje', 'Ingreso correcto...');
                                var grid = Ext.getCmp('grid1');
                                store.load({
                                    params: {
                                        libro_nombre: c_libro_nombre
                                    }
                            });
                                win1.close();
                            }
                        }
                    });
                }

    },

    onEditarLibro: function(button, e, eOpts) {
        var win2 = Ext.widget('ingresolibro');
        var records = this.getMygridpanel().getSelectionModel().getSelection();
        var editForm = win2.down('form');
        mode = 'Actualizar';

        if (records.length === 1) {
            var record = records[0];
            editForm.getForm().loadRecord(record);
        } else {
            return;
        }

    },

    onEliminarLibro: function(button, e, eOpts) {
        var store = Ext.getStore('storeLibro');
        var grid=this.getMygridpanel();
        var sm=grid.getSelectionModel().getSelection();
        var data=[];
        for(var i=0;i<=sm.length-1;i++){
            data.push(sm[i].data);
        }

        var datos = Ext.encode(data);
        Ext.Ajax.request({
        	method:'GET',
        	url:'src/GrabarEliminarPersonal.php',
        	params:{
                  datos:datos
        	},
        	failure:function(){
        		Ext.Msg.alert('Mensaje','Error en el servidor');
        	},
        	success: function(response){
        		var resp = Ext.decode(response.responseText);
        		var no = resp.data[0];
        		if(no=='elim')
        		{
        			Ext.getCmp('grid');
        			store.load({
        				params:{
        				 datos: datos
        				}
        			});
        		   alert("Personal eliminado...");
        		   return;
        		}

        	}
        });
    },

    onSalir1: function(button, e, eOpts) {
                var win1 = button.up('windowadmin');
                win1.close();
    },

    onSalir2: function(button, e, eOpts) {
                var win2 = button.up('ingresolibro');
                win2.close();
    }

});
